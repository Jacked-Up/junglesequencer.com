"use strict";(self.webpackChunkjungle_website=self.webpackChunkjungle_website||[]).push([[9878],{371:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>a,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var o=n(5893),s=n(1151);const t={title:"Node Properties",sidebar_position:0},i=void 0,d={id:"jungle-nodes/node-properties",title:"Node Properties",description:"All Jungle Nodes require the class attribute NodeProperties to be defined.",source:"@site/docs/jungle-nodes/node-properties.md",sourceDirName:"jungle-nodes",slug:"/jungle-nodes/node-properties",permalink:"/docs/jungle-nodes/node-properties",draft:!1,unlisted:!1,editUrl:"https://github.com/Jacked-Up/junglesequencer.com/tree/prod/docs/jungle-nodes/node-properties.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Node Properties",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"JungleGPT",permalink:"/docs/get-started/jungle-gpt"},next:{title:"Branch Node<T>",permalink:"/docs/jungle-nodes/branch-node"}},l={},c=[{value:"Properties",id:"properties",level:2},{value:"Title",id:"title",level:3},{value:"Description",id:"description",level:3},{value:"Category",id:"category",level:3},{value:"Color",id:"color",level:3},{value:"Deprecated",id:"deprecated",level:3},{value:"Boilerplate",id:"boilerplate",level:2},{value:"Example",id:"example",level:3}];function h(e){const r={admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(r.p,{children:["All Jungle Nodes require the class attribute ",(0,o.jsx)(r.strong,{children:"NodeProperties"})," to be defined."]}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.strong,{children:"NodeProperties"})," attribute is used to define the Jungle Node script you created."]}),"\n",(0,o.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Name"}),(0,o.jsx)(r.th,{children:"Type"}),(0,o.jsx)(r.th,{children:"Notes"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"Title"}),(0,o.jsx)(r.td,{children:"string"}),(0,o.jsx)(r.td,{children:"Defines the title of the node"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"Description"}),(0,o.jsx)(r.td,{children:"string"}),(0,o.jsx)(r.td,{children:"Documents the purpose of the node (Also used as a tooltip)"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"Category"}),(0,o.jsx)(r.td,{children:"string"}),(0,o.jsx)(r.td,{children:"Defines the location in the node explorer to put this node"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"Color"}),(0,o.jsx)(r.td,{children:"string"}),(0,o.jsxs)(r.td,{children:["Defines the accent color of the node. Is a ",(0,o.jsx)(r.strong,{children:"Hex Code"})]})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"Deprecated"}),(0,o.jsx)(r.td,{children:"boolean"}),(0,o.jsx)(r.td,{children:"Set this to true to declare this node as deprecated"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"LimitOnePerTree"}),(0,o.jsx)(r.td,{children:"boolean"}),(0,o.jsx)(r.td,{children:"Set this to true if you want to limit this node to one per tree"})]})]})]}),"\n",(0,o.jsx)(r.h3,{id:"title",children:"Title"}),"\n",(0,o.jsx)(r.p,{children:"The title of the node is used for the The title of your node does not need to be unique."}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.em,{children:"Here's a naming pattern we recommend:"})}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"For example,"})," lets say you have a script in your game that controls a door named ",(0,o.jsx)(r.strong,{children:"DoorController.cs"})," that you would\r\nlike to build nodes for. Here's how you could define the title for both an ",(0,o.jsx)(r.strong,{children:"Open Door"})," and ",(0,o.jsx)(r.strong,{children:"Close Door"})," node script."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'[NodeProperties(\r\n    Title = "Open Door"\r\n)]\r\npublic class OpenDoorNode : IONode\r\n...\n'})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'[NodeProperties(\r\n    Title = "Close Door"\r\n)]\r\npublic class CloseDoorNode : IONode\r\n...\n'})}),"\n",(0,o.jsxs)(r.p,{children:["All scripts that inherit from type Jungle Node should have the word ",(0,o.jsx)(r.strong,{children:"Node"})," at the end of its class name. This is not\r\nrequired but is a great naming pattern to follow."]}),"\n",(0,o.jsx)(r.h3,{id:"description",children:"Description"}),"\n",(0,o.jsx)(r.p,{children:"The description of the node should be a brief explanation of what the node does. The description is also used as a\r\ntooltip when you hover over the node in the Jungle Editor."}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"For example,"})," lets use our door example above, here's how you could define the description for both scripts:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'// OpenDoorNode.cs\r\n[NodeProperties(\r\n    Description = "Opens the inputted door."\r\n)]\n'})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'// CloseDoorNode.cs\r\n[NodeProperties(\r\n    Description = "Closes the inputted door."\r\n)]\n'})}),"\n",(0,o.jsx)(r.h3,{id:"category",children:"Category"}),"\n",(0,o.jsx)(r.p,{children:"The category of the node defines the location in the node explorer to put this node. The location is determined by the\r\npath you declare. The path can be as many folders deep as you'd like."}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"For example,"})," lets use our door example above, here's how you could define the category:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'[NodeProperties(\r\n    Category = "Game/Door"\r\n)]\n'})}),"\n",(0,o.jsx)(r.h3,{id:"color",children:"Color"}),"\n",(0,o.jsxs)(r.p,{children:["Color defines the accent color of the node. The color is a ",(0,o.jsx)(r.strong,{children:"hex code"}),". You can use any hex code you want."]}),"\n",(0,o.jsxs)(r.p,{children:["There are predefined colors in the Jungle Node class. These colors are just constant strings set to ",(0,o.jsx)(r.strong,{children:"hex codes"}),". The\r\npredefined colors were added as a shorthand for the hex codes. You can use either the predefined colors or simply define\r\nyour own hex code.\r\n",(0,o.jsxs)(r.em,{children:[(0,o.jsx)("br",{}),(0,o.jsx)("br",{}),"Here is a list of all the predefined colors:"]})]}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Red"}),"     #dc1313"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Orange"}),"  #ff5b00"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Yellow"}),"  #f29e06"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Green"}),"   #38ca42"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Teal"}),"    #15deab"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Cyan"}),"    #00eaff"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Blue"}),"    #0069ff"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Purple"}),"  #b300ff"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Pink"}),"    #ff00ea"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Violet"}),"  #85034c"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"White"}),"   #ffffff"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Black"}),"   #101010"]}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'// These are the exact same thing\r\nstring predefinedColor = JungleNode.Blue;\r\nstring definedColor = "#0069ff";\n'})}),"\n",(0,o.jsx)(r.h3,{id:"deprecated",children:"Deprecated"}),"\n",(0,o.jsx)(r.p,{children:"The deprecated property was implemented as a solution for safely removing Jungle Node scripts from your project. While\r\nJungle has built-in detection for missing nodes, deleting the node scripts while they exist inside a Jungle Tree can\r\nlead to unexpected behavior."}),"\n",(0,o.jsx)(r.p,{children:"When you set the deprecated property to true, the node will no longer be available in the node explorer and the Jungle\r\nValidator will mark all instances of the node within Jungle Trees as deprecated so that you can safely remove them."}),"\n",(0,o.jsx)(r.admonition,{title:"DANGER",type:"danger",children:(0,o.jsxs)(r.p,{children:["You should ",(0,o.jsx)(r.strong,{children:"NEVER"})," delete a Jungle Node script from your project until it has been removed from all Jungle Trees."]})}),"\n",(0,o.jsx)(r.h2,{id:"boilerplate",children:"Boilerplate"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'[NodeProperties(\r\n    Title = "My Node",\r\n    Description = "This is the description of My Node",\r\n    Category = "Nodes/My Node",\r\n    Color = Blue,\r\n    Deprecated = false     // Not required to be defined (defaults to false)\r\n)]\n'})}),"\n",(0,o.jsx)(r.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(r.p,{children:"Let's put everything together now and define the node properties for the door example above."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'[NodeProperties(\r\n    Title = "Open Door",\r\n    Description = "Opens the inputted door.",\r\n    Category = "Game/Door",\r\n    Color = Green\r\n)]\r\npublic class OpenDoorNode : IONode\r\n...\n'})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'[NodeProperties(\r\n    Title = "Close Door",\r\n    Description = "Closes the inputted door.",\r\n    Category = "Game/Door",\r\n    Color = Red\r\n)]\r\npublic class CloseDoorNode : IONode\r\n...\n'})})]})}function a(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>d,a:()=>i});var o=n(7294);const s={},t=o.createContext(s);function i(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);