"use strict";(self.webpackChunkjungle_website=self.webpackChunkjungle_website||[]).push([[4581],{3617:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=i(5893),o=i(1151);const s={title:"Jungle Gizmos",sidebar_position:6,slug:"/jungle-gizmos"},t=void 0,a={id:"documentation/jungle-gizmos",title:"Jungle Gizmos",description:"Unity provides a way to draw gizmos in the scene view. Gizmos are visual shapes and lines that can be used for debugging",source:"@site/docs/documentation/jungle-gizmos.mdx",sourceDirName:"documentation",slug:"/jungle-gizmos",permalink:"/docs/jungle-gizmos",draft:!1,unlisted:!1,editUrl:"https://github.com/Jacked-Up/junglesequencer.com/tree/prod/docs/documentation/jungle-gizmos.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Jungle Gizmos",sidebar_position:6,slug:"/jungle-gizmos"},sidebar:"documentationSidebar",previous:{title:"Jungle Player",permalink:"/docs/jungle-player"},next:{title:"Jungle Runtime",permalink:"/docs/jungle-runtime"}},d={},l=[{value:"How to Draw Gizmos",id:"how-to-draw-gizmos",level:2},{value:"Example",id:"example",level:3}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Unity provides a way to draw gizmos in the scene view. Gizmos are visual shapes and lines that can be used for debugging\r\nand visualizing information in the scene view. Usually, this feature is only available in the ",(0,r.jsx)(n.code,{children:"OnDrawGizmos"})," and\r\n",(0,r.jsx)(n.code,{children:"OnDrawGizmosSelected"})," methods within a ",(0,r.jsx)(n.code,{children:"MonoBehaviour"})," class."]}),"\n",(0,r.jsx)(n.p,{children:"Luckily, Jungle provides a way to draw gizmos in the scene view all from within your node scripts."}),"\n",(0,r.jsxs)(n.admonition,{title:"NOTE",type:"tip",children:[(0,r.jsxs)(n.p,{children:["You can view gizmos in the game view by enabling the ",(0,r.jsx)(n.code,{children:"Gizmos"})," toggle in the game view toolbar."]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Arrow pointing to where to enable gizmos in game view",src:i(4395).Z+"",width:"1000",height:"481"})})]}),"\n",(0,r.jsx)(n.h2,{id:"how-to-draw-gizmos",children:"How to Draw Gizmos"}),"\n",(0,r.jsxs)(n.p,{children:["Drawing gizmos is as easy as overriding the ",(0,r.jsx)(n.code,{children:"DrawGizmos"})," or ",(0,r.jsx)(n.code,{children:"DrawGizmosSelected"})," methods in your node script.\r\nWithin either of these methods, you safely draw gizmos or handles in the scene view."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"using Jungle;\r\n\r\npublic class GizmosNode : GenericNode\r\n{\r\n    ...\r\n\r\n    public override void DrawGizmos()\r\n    {\r\n        // Draws gizmos in the scene view when: \r\n        // - The node is open in the editor\r\n        // - The tree this node is in is running\r\n    }\r\n    \r\n    public override void DrawGizmosSelected()\r\n    {\r\n        // Draws gizmos in the scene view when:\r\n        // - The node is selected in the editor\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"Here's an example of a node that draws a red sphere in the scene view:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"using Jungle;\r\nusing UnityEngine;\r\n\r\npublic class GizmosNode : GenericNode\r\n{\r\n    [SerializeField]\r\n    private Vector3 position = Vector3.zero;\r\n    \r\n    [SerializeField]\r\n    private float radius = 1f;\r\n    \r\n    protected override void OnStart() { }\r\n\r\n    protected override void OnUpdate() { }\r\n    \r\n    public override void DrawGizmos()\r\n    {\r\n        // Draws a red sphere at the origin\r\n        Gizmos.color = Color.red;\r\n        Gizmos.DrawSphere(position, radius);\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"The example above will draw a red sphere at the specified position with the specified radius in the scene view whenever\r\nthe tree is open in the editor or when the tree is running."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Arrows pointing to gizmos draw by the nodes",src:i(6745).Z+"",width:"1612",height:"836"})}),"\n",(0,r.jsx)(n.p,{children:"Two red sphere are drawn to the scene view because there are two instances of the example above."})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},4395:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/jungle-enable-gizmos-in-game-view-a98452a1fe9f87fcadc287508001a9fa.jpg"},6745:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/jungle-gizmos-example-4e4e3edb1e3e872639b119ba7e6a7028.jpg"},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>t});var r=i(7294);const o={},s=r.createContext(o);function t(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);